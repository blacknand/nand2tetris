function Screen.init 0
call Screen.clearScreen 0
pop temp 0
push constant 0
return
function Screen.clearScreen 1
push constant 16384
pop local 0
label WHILE_EXP0
push local 0
push constant 16384
lt
push constant 8192
add
not
if-goto WHILE_END0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 8
push constant 16384
push argument 1
add
push constant 32
call Math.multiply 2
push argument 0
add
push constant 16
call Math.divide 2
pop local 0
push argument 0
push constant 16
call Math.divide 2
pop local 2
push local 2
push constant 16
call Math.multiply 2
pop local 3
push argument 0
push local 3
sub
pop local 4
push constant 1
pop local 6
push constant 0
pop local 7
label WHILE_EXP0
push local 7
push local 4
lt
not
if-goto WHILE_END0
push local 6
push constant 2
call Math.multiply 2
pop local 6
push local 7
push constant 1
add
pop local 7
goto WHILE_EXP0
label WHILE_END0
push local 0
call Memory.peek 1
pop local 5
push local 5
push local 6
or
pop local 5
push local 0
push local 5
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 7
push argument 0
pop local 0
push argument 1
pop local 1
push argument 2
push local 0
sub
pop local 2
push argument 3
push local 1
sub
pop local 3
push constant 0
pop local 5
push constant 0
pop local 6
push constant 0
pop local 4
label WHILE_EXP0
push local 5
push local 2
lt
push local 5
or
push local 2
eq
push local 6
push local 3
lt
push local 6
or
push local 3
eq
and
not
if-goto WHILE_END0
push local 0
push local 5
add
push local 1
push local 6
add
call Screen.drawPixel 2
pop temp 0
push local 4
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 5
push constant 1
add
pop local 5
push local 4
push local 3
add
pop local 4
goto IF_END0
label IF_FALSE0
push local 6
push constant 1
add
pop local 6
push local 4
push local 2
sub
pop local 4
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawRectangle 1
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 3
push argument 2
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 2
push argument 1
push argument 2
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 1
add
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
not
if-goto WHILE_END0
push argument 0
push local 0
push argument 2
push local 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 3
push argument 2
neg
pop local 0
label WHILE_EXP0
push local 0
push argument 2
lt
push local 0
or
push argument 2
eq
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
call Math.sqrt 2
pop local 2
push argument 0
push local 2
sub
push argument 1
push local 0
add
push argument 0
push local 2
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
